// src/pages/GuidancePage.js
import React, { useEffect, useState } from "react";
import { collection, getDocs } from "firebase/firestore";
import { db } from "../firebase";
import { Link } from "react-router-dom";

const GuidancePage = () => {
  const [guides, setGuides] = useState([]);
  const [loading, setLoading] = useState(true);
  const [loadError, setLoadError] = useState(null);

  useEffect(() => {
    const fetchGuides = async () => {
      try {
        const snapshot = await getDocs(collection(db, "guidanceNotes")); // ‚úÖ this must match the real collection name exactly
        const data = snapshot.docs.map((doc) => {
          const item = doc.data();
          return {
            id: doc.id,
            title: item.title || "Untitled Document",
            description: item.description || "No description available.",
            pdfUrl: item.pdfUrl || "",
          };
        });
        setGuides(data);
      } catch (err) {
        console.error("üî• Failed to fetch guidance notes:", err);
        setLoadError(
          "Error loading guidance notes. Check console for details."
        );
      } finally {
        setLoading(false);
      }
    };

    fetchGuides();
  }, []);

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="mb-6">
        <Link
          to="/dashboard"
          className="inline-block text-blue-600 hover:underline"
        >
          ‚Üê Back to Dashboard
        </Link>
      </div>

      <h1 className="text-3xl font-bold text-blue-700 mb-4">Guidance Notes</h1>

      {loading && <p className="text-gray-500">Loading...</p>}

      {loadError && (
        <div className="text-red-600 bg-red-50 border border-red-200 p-4 rounded">
          {loadError}
        </div>
      )}

      {!loading && !loadError && guides.length === 0 && (
        <p className="text-gray-500">No guidance documents found.</p>
      )}

      {!loading && !loadError && guides.length > 0 && (
        <ul className="space-y-4">
          {guides.map((doc) => (
            <li key={doc.id} className="bg-white rounded shadow p-4">
              <h2 className="text-xl font-semibold text-blue-800">
                {doc.title}
              </h2>
              <p className="text-sm text-gray-600 mb-2">{doc.description}</p>

              {doc.pdfUrl.startsWith("https://") ? (
                <a
                  href={doc.pdfUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-blue-600 hover:underline text-sm"
                >
                  View PDF
                </a>
              ) : (
                <p className="text-sm text-gray-400 italic">
                  No PDF link available.
                </p>
              )}
            </li>
          ))}
        </ul>
      )}
    </div>
  );
};

export default GuidancePage;
